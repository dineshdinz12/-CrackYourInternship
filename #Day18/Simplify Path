71. Simplify Path

char* simplifyPath(char* path) {
    char** stack = (char**)malloc(sizeof(char*) * strlen(path));
    int stackSize = 0;

    char* token = strtok(path, "/");
    while (token != NULL) {
        if (strcmp(token, "..") == 0) {
            if (stackSize > 0) {
                free(stack[--stackSize]);
            }
        } else if (strcmp(token, ".") != 0 && strlen(token) > 0) {
            stack[stackSize] = (char*)malloc(strlen(token) + 1);
            strcpy(stack[stackSize++], token);
        }
        token = strtok(NULL, "/");
    }

    if (stackSize == 0) {
        free(stack);
        char* result = (char*)malloc(2);
        strcpy(result, "/");
        return result;
    }

    int totalLength = 0;
    for (int i = 0; i < stackSize; i++) {
        totalLength += strlen(stack[i]) + 1;
    }

    char* result = (char*)malloc(totalLength + 1);
    result[0] = '\0';
    for (int i = 0; i < stackSize; i++) {
        strcat(result, "/");
        strcat(result, stack[i]);
        free(stack[i]);
    }
    free(stack);
    return result;
}
