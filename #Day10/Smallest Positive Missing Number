Smallest Positive Missing Number

#include <stdio.h>
void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
int missingNumber(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        while (arr[i] > 0 && arr[i] <= n && arr[arr[i] - 1] != arr[i]) {
            swap(&arr[arr[i] - 1], &arr[i]);
        }
    }

    for (int i = 0; i < n; i++) {
        if (arr[i] != i + 1) {
            return i + 1;
        }
    }
    return n + 1;
}

int main() {
    int arr1[] = {1, 2, 3, 4, 5};
    int n1 = sizeof(arr1) / sizeof(arr1[0]);
    printf("Smallest missing positive number: %d\n", missingNumber(arr1, n1));

    int arr2[] = {0, -10, 1, 3, -20};
    int n2 = sizeof(arr2) / sizeof(arr2[0]);
    printf("Smallest missing positive number: %d\n", missingNumber(arr2, n2));

    return 0;
}
