Product array puzzle

#include <stdio.h>
#include <stdlib.h>

void productExceptSelf(int nums[], int count, int result[]) {
    int* left = (int*)malloc(count * sizeof(int));
    int* right = (int*)malloc(count * sizeof(int));

    left[0] = 1;
    for (int i = 1; i < count; i++) {
        left[i] = nums[i - 1] * left[i - 1];
    }

    right[count - 1] = 1;
    for (int i = count - 2; i >= 0; i--) {
        right[i] = nums[i + 1] * right[i + 1];
    }

    for (int i = 0; i < count; i++) {
        result[i] = left[i] * right[i];
    }

    free(left);
    free(right);
}

int main() {
    int i, count;
    int nums[105];
    int result[105]; 

    scanf("%d", &count); 
    for (i = 0; i < count; i++) {
        scanf("%d", &nums[i]);
    }

    productExceptSelf(nums, count, result);

    for (i = 0; i < count; i++) {
        printf("%d ", result[i]);
    }
    printf("\n");

    return 0; 
}
